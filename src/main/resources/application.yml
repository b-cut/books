spring:
  profiles:
    active: dev
  data:
    mongodb:
      uri: mongodb://localhost:27017/books?safe=true&journal=true&w=majority&connectTimeoutMS=1001&wtimeoutMS=1000&serverSelectionTimeoutMS=10000
  aop:
    proxy-target-class: false
  devtools:
    livereload:
      enabled: false  # off as we already have live reload in the web tier project
  jackson:
    serialization:
      write-dates-as-timestamps: true
  boot:
    admin:
      client:
        enabled: true
        url: http://localhost:8888
        instance:
          name: Books Microservice
          metadata:
            tags:
              environment: Aidans local PC

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: NotInSCM1
            client-secret: NotInSCM1
          facebook:
            client-id: NotInSCM2
            client-secret: NotInSCM2
        provider:
          # Google provides all the info this app needs by default. Facebook needs configuring.
          facebook:
            user-info-uri: https://graph.facebook.com/me?fields=name,first_name,last_name,link,picture,email

  mail:
    host: localhost
    properties:
      mail:
        smtp:
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000
    test-connection: false

#server:
  # use-forward-headers: true       # Assuming that this service is running behind a proxy / gateway that terminates the SSL
  # port:                           # If you need to set the port the service runs on
  # tomcat:
    # remote-ip-header: x-forwarded-for             # If you need to set these, then also add required headers in proxy
    # protocol-header: x-forwarded-proto            # e.g. for Apache
    # internal-proxies: 123\.45\.\d{1,3}\.\d{1,3}   # RequestHeader set X-Forwarded-Proto https and RequestHeader set X-Forwarded-Port 443

management:
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        # include: auditevents, beans, conditions, configprops, env, health, httptrace, info, logfile, loggers, metrics, mappings, scheduledtasks, sessions
        include: "*"
  endpoint:
    health:
      show-details: when_authorized
      roles: ADMIN
  info:
    git:
      mode: full
  health:
    mail:
      enabled: false

logging:
  file: c:/temp/books-microservice.log
  pattern:
    file=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx

info:
  build:
    artifact: "@project.artifactId@"
    name: "@project.name@"
    description: "@project.description@"
    version: "@project.version@"

books:
  client:
    enableCORS: false
    allowedCorsOrigin: http://localhost:9000
    postLogonUrl: http://localhost:9000/
    xsrfHeader: X-XSRF

  google:
    books:
      api:
        searchUrl: https://www.googleapis.com/books/v1/volumes?maxResults=30&q=
        getByIdUrl: https://www.googleapis.com/books/v1/volumes/
        countryCode: country=GB
        connecTimeout: 2000
        readTimeout: 3000

  reload:
    development:
      data: false  # Whether the contents of the /src/main/resources/sample_data will be reloaded into the database at application startup. Deletes all existing data!!!

  users:
    default:
      admin:
        email:   # The remote email address for a user that will be automatically made an admin on first logon.
      page:
        size: 5
    max:
      page:
        size: 100
    registrationAdminEmail:
      enabled: false
      emailTitle: "Books Service - New User Registration"
      emailContent: "New users(s) have registered for the Books service"
      emailFrom:
      emailTo:
      cron: "15 */15 * * * *"   # Cron expression for how often to look for new users and email an admin

  jwt:
    expiryInMilliSeconds: 86400000 # One day
    secretKey:                     # Specify your secret key here
    issuer: "CloudyBookClub"
    cookieOverHttpsOnly: true
    cookieAccessedByHttpOnly: true
    cookiePath: /
    cookieExpirySeconds: 86400 # One day

  oauth2:
    cookieOverHttpsOnly: true

  thread:
    pool1:
      coresize: 2
      maxsize: 4
      queue:
        capacity: 50
      thread:
        prefix: GoogleBooksLookup-
        
  feeds:
    maxentries: 30
    title: The Cloudy Bookclub recent entries
    domain: http://localhost:9000/
    description: Updates from the Cloudy Bookclub application
